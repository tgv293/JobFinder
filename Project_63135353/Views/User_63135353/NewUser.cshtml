@model Project_63135353.Models.UserMV_63135353

@{
    ViewBag.Title = "Registration";
}

<section class="contact-section">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <h2 class="contact-title">Đăng Ký</h2>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-8">
                @using (Html.BeginForm("NewUser", "User_63135353", FormMethod.Post,
                    new
                    {
                        @class = "form-contact",
                        @novalidate = "novalidate"
                    }))
                {
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.EditorFor(model => model.UserName, new
                                {
                                   htmlAttributes = new
                                       {
                                           @class = "form-control valid",
                                           @type = "text",
                                           @name = "name",
                                           @id = "name",
                                           @placeholder = "Vui lòng nhập Tên đăng nhập",
                                           @onfocus = "this.placeholder = ''",
                                           @onblur = "this.placeholder = 'Vui lòng nhập Tên đăng nhập'",
                                           @required = "true"
                                       }
                                })
                                <span class="text-danger" id="userNameError"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.EditorFor(model => model.Password, new
                                {
                                    htmlAttributes = new
                                       {
                                           @class = "form-control valid",
                                           @type = "password",
                                           @name = "password",
                                           @id = "password",
                                           @placeholder = "Vui lòng nhập Mật khẩu",
                                           @onfocus = "this.placeholder = ''",
                                           @onblur = "this.placeholder = 'Vui lòng nhập Mật khẩu'",
                                           @required = "true"
                                       }
                                })
                                <span class="text-danger" id="passwordError"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.EditorFor(model => model.ContactNo, new
                                {
                                   htmlAttributes = new
                                       {
                                           @class = "form-control valid",
                                           @type = "tel",
                                           @name = "contactno",
                                           @id = "contactno",
                                           @placeholder = "Vui lòng nhập Số điện thoại",
                                           @onfocus = "this.placeholder = ''",
                                           @onblur = "this.placeholder = 'Vui lòng nhập Số điện thoại'",
                                           @required = "true"
                                       }
                                })
                                <span class="text-danger" id="contactNoError"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.EditorFor(model => model.EmailAddress, new
                                {
                                   htmlAttributes = new
                                       {
                                           @class = "form-control valid",
                                           @type = "email",
                                           @name = "email",
                                           @id = "email",
                                           @placeholder = "Vui lòng nhập Email",
                                           @onfocus = "this.placeholder = ''",
                                           @onblur = "this.placeholder = 'Vui lòng nhập Email'",
                                           @required = "true"
                                       }
                                })
                                <span class="text-danger" id="emailError"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div>
                                <p>
                                    Bạn là Nhà Tuyển Dụng?
                                    @Html.EditorFor(model => model.AreYouProvider)
                                </p>
                            </div>
                        </div>
                        <div class="col-sm-6" id="divcompanyname">
                            <div class="form-group">
                                @Html.EditorFor(model => model.Company.CompanyName, new
                                {
                                    htmlAttributes = new
                                       {
                                           @class = "form-control valid",
                                           @type = "text",
                                           @name = "companyname",
                                           @id = "companyname",
                                           @placeholder = "Vui lòng nhập Tên Công ty",
                                           @onfocus = "this.placeholder = ''",
                                           @onblur = "this.placeholder = 'Vui lòng nhập Tên Công ty'",
                                       }
                                })
                                <span class="text-danger" id="companyNameError"></span>
                            </div>
                        </div>
                        <div class="col-sm-6" id="divcompanyphoneno">
                            <div class="form-group">
                                @Html.EditorFor(model => model.Company.PhoneNo, new
                                {
                                    htmlAttributes = new
                                       {
                                           @class = "form-control valid",
                                           @type = "tel",
                                           @name = "companyphoneno",
                                           @id = "companyphoneno",
                                           @placeholder = "Vui lòng nhập SĐT Công ty",
                                           @onfocus = "this.placeholder = ''",
                                           @onblur = "this.placeholder = 'Vui lòng nhập SĐT Công ty'",
                                       }
                                })
                                <span class="text-danger" id="companyPhoneNoError"></span>
                            </div>
                        </div>
                        <div class="col-sm-6" id="divcompanyemail">
                            <div class="form-group">
                                @Html.EditorFor(model => model.Company.EmailAddress, new
                                {
                                    htmlAttributes = new
                                       {
                                           @class = "form-control valid",
                                           @type = "email",
                                           @name = "companyemail",
                                           @id = "companyemail",
                                           @placeholder = "Vui lòng nhập Email Công ty",
                                           @onfocus = "this.placeholder = ''",
                                           @onblur = "this.placeholder = 'Vui lòng nhập Email Công ty'",
                                       }
                                })
                                <span class="text-danger" id="companyEmailError"></span>
                            </div>
                        </div>
                        <div class="col-12" style="" id="divcompanydescription">
                            <div class="form-group">
                                @Html.EditorFor(model => model.Company.Description, new
                                {
                                    htmlAttributes = new
                                       {
                                           @class = "form-control valid",
                                           @type = "text",
                                           @name = "companydescription",
                                           @id = "companydescription",
                                           @placeholder = "Mô tả về Công ty...",
                                           @onfocus = "this.placeholder = ''",
                                           @onblur = "this.placeholder = 'Mô tả về Công ty...'",
                                       }
                                })
                                <span class="text-danger" id="companyDescriptionError"></span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group" style="display: flex; flex-direction: column; align-items: center;">
                        <div class="text-danger" id="validationMessage" style="display:none;"></div>
                        <input type="submit" value="Đăng Ký" class="button button-contactForm boxed-btn" />
                    </div>
                }
            </div>

            <div class="col-lg-3 offset-lg-1">
                <div class="media contact-info">
                    <span class="contact-info__icon"><i class="ti-home"></i></span>
                    <div class="media-body">
                        <h3>Việt Nam, tỉnh Khánh Hòa</h3>
                        <p>TP. Nha Trang, 650000</p>
                    </div>
                </div>
                <div class="media contact-info">
                    <span class="contact-info__icon"><i class="ti-tablet"></i></span>
                    <div class="media-body">
                        <h3>+84 773 753 848</h3>
                        <p>T2-T6, 9:00 AM-6:00 PM</p>
                    </div>
                </div>
                <div class="media contact-info">
                    <span class="contact-info__icon"><i class="ti-email"></i></span>
                    <div class="media-body">
                        <h3>tai.gv.63cntt@ntu.edu.vn</h3>
                        <p>Gửi cho chúng tôi câu hỏi của bạn bất cứ lúc nào!</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        // Ẩn các trường công ty khi trang được tải
        $("#divcompanyname, #divcompanyemail, #divcompanydescription, #divcompanyphoneno").hide();

        // Bắt sự kiện khi thay đổi trạng thái "Nhà tuyển dụng"
        $("#AreYouProvider").change(function () {
            var companyFields = $("#divcompanyname, #divcompanyemail, #divcompanydescription, #divcompanyphoneno");
            companyFields.toggle(this.checked);
        });

        // Bắt sự kiện khi form submit
        $("form").submit(function (e) {
            e.preventDefault(); // Ngăn chặn form submit mặc định

            // Xóa tất cả thông báo lỗi trước khi kiểm tra lại
            clearFieldErrors();

            // Lấy giá trị từ các trường nhập liệu
            var username = $("#name").val();
            var password = $("#password").val();
            var contactNo = $("#contactno").val();
            var emailAddress = $("#email").val();

            // Kiểm tra xem các trường nhập liệu có rỗng không
            if (!validateRequiredFields(username, password, contactNo, emailAddress)) {
                displayValidationMessage("Vui lòng điền đầy đủ thông tin đăng ký.");
                return false;
            } else {
                // Xóa thông báo lỗi nếu mấy ô nhập liệu đã được điền
                displayValidationMessage("");
            }

            // Kiểm tra chiều dài tên đăng nhập và mật khẩu
            if (!validateUsernameAndPassword(username, password)) {
                return false;
            }

            // Kiểm tra định dạng email và số điện thoại
            if (!validateEmailAndPhone(emailAddress, contactNo)) {
                return false;
            }

            // Nếu là nhà tuyển dụng, kiểm tra thêm trường công ty
            if ($("#AreYouProvider").is(":checked")) {
                var companyName = $("#companyname").val();
                var companyEmail = $("#companyemail").val();
                var companyPhoneNo = $("#companyphoneno").val();
                var companyDescription = $("#companydescription").val();

                // Kiểm tra xem các trường công ty có rỗng không
                if (!validateRequiredFields(companyName, companyEmail, companyPhoneNo, companyDescription)) {
                    displayValidationMessage("Vui lòng điền đầy đủ thông tin đăng ký.");
                    return false;
                } else {
                    // Xóa thông báo lỗi nếu mấy ô nhập liệu đã được điền
                    displayValidationMessage("");
                }

                // Kiểm tra định dạng số điện thoại công ty
                if (!validatePhone(companyPhoneNo, "companyPhoneNoError")) {
                    return false;
                }
            }

            // Thực hiện submit form bằng AJAX
            $.ajax({
                url: $("form").attr("action"),
                method: "POST",
                data: $("form").serialize(),
                success: function (data) {
                    // Xử lý kết quả từ server
                    if (data.success) {
                        // Nếu đăng ký thành công, chuyển hướng đến trang đăng nhập
                        window.location.href = data.redirectUrl;
                    } else {
                        // Nếu có lỗi, hiển thị lỗi dưới các trường tương ứng
                        for (var fieldName in data.errors) {
                            // Hiển thị lỗi dưới trường tên đăng nhập
                            if (fieldName === "UserName") {
                                displayFieldError("userNameError", data.errors[fieldName][0]);
                            }
                            // Hiển thị lỗi dưới trường địa chỉ email
                            else if (fieldName === "EmailAddress") {
                                displayFieldError("emailError", data.errors[fieldName][0]);
                            }
                            // ... (xử lý các trường khác nếu cần)
                            else {
                                displayFieldError(fieldName + "Error", data.errors[fieldName][0]);
                            }
                        }
                    }
                },
                error: function () {
                    console.log("Error submitting form via AJAX.");
                }
            });
        });

        // Hàm hiển thị thông báo lỗi của trường nào đó
        function displayFieldError(fieldName, errorMessage) {
            $("#" + fieldName).text(errorMessage);
        }

        // Hàm hiển thị thông báo lỗi chung
        function displayValidationMessage(message) {
            $("#validationMessage").text(message);
            if (message.trim() === "") {
                $("#validationMessage").hide(); // Ẩn thông báo nếu mấy ô nhập liệu đã được điền
            } else {
                $("#validationMessage").show();
            }
        }

        // Hàm xóa tất cả thông báo lỗi
        function clearFieldErrors() {
            $("[id$=Error]").text(""); // Xóa tất cả thông báo lỗi trong các trường có ID kết thúc bằng "Error"
        }

        // Hàm kiểm tra và hiển thị thông báo lỗi cho các trường bắt buộc
        function validateRequiredFields() {
            var fields = Array.from(arguments);
            for (var i = 0; i < fields.length; i++) {
                if (!fields[i].trim()) {
                    displayValidationMessage("Vui lòng điền đầy đủ thông tin đăng ký.");
                    return false;
                }
            }
            return true;
        }

        // Hàm kiểm tra và hiển thị thông báo lỗi cho chiều dài tên đăng nhập và mật khẩu
        function validateUsernameAndPassword(username, password) {
            if (username.length < 4) {
                displayFieldError("userNameError", "Tên đăng nhập phải từ 4 ký tự trở lên.");
                return false;
            }

            // Kiểm tra mật khẩu và hiển thị lỗi nếu cần
            if (!isPasswordValid(password)) {
                displayFieldError("passwordError", "Mật khẩu phải có ít nhất 6 ký tự, 1 ký tự hoa, 1 số và 1 ký tự đặc biệt.");
                return false;
            } else {
                displayFieldError("passwordError", ""); // Xóa thông báo lỗi nếu mật khẩu hợp lệ
            }

            return true;
        }

        // Hàm kiểm tra và hiển thị thông báo lỗi cho định dạng email và số điện thoại
        function validateEmailAndPhone(email, phone) {
            var emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            if (!emailRegex.test(email)) {
                displayFieldError("emailError", "Định dạng email không hợp lệ.");
                return false;
            }

            var phoneRegex = /^\d{10,}$/;
            if (!phoneRegex.test(phone)) {
                displayFieldError("contactNoError", "Định dạng số điện thoại không hợp lệ.");
                return false;
            }

            return true;
        }

        // Hàm kiểm tra và hiển thị thông báo lỗi cho định dạng số điện thoại
        function validatePhone(phone, errorField) {
            var phoneRegex = /^\d{10,}$/;
            if (!phoneRegex.test(phone)) {
                displayFieldError(errorField, "Định dạng số điện thoại không hợp lệ.");
                return false;
            }
            return true;
        }

        // Hàm kiểm tra mật khẩu
        function isPasswordValid(password) {
            // Kiểm tra xem mật khẩu có ít nhất 1 ký tự hoa, 1 số và 1 ký tự đặc biệt
            var uppercaseRegex = /[A-Z]/;
            var numberRegex = /\d/;
            var specialCharRegex = /[!@@#$%^&*(),.?":{}|<>]/;

            // Kiểm tra chiều dài mật khẩu
            var isLengthValid = password.length >= 6;

            return uppercaseRegex.test(password) && numberRegex.test(password) && specialCharRegex.test(password) && isLengthValid;
        }
    });
</script>